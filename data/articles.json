[
    {
        "title": "Creating an Audio Visualizer with JavaScript",
        "subtitle": "Learn how to build an audio visualiser using the JavaScript Canvas & Web Audio API",
        "body": "Ever since I discovered the Canvas and Web Audio API, I’ve been fascinated by their creative potential. In this article, I’ll show you how I built an audio visualizer using these two technologies",
        "link": "https://medium.com/@simphiwenkabinde.dev/creating-an-audio-visualizer-with-javascript-9287a1d91336"
    },
    {
        "title": "Building a collision simulator with JavaScript",
        "subtitle": "Learn how to build a collision simulator using the JavaScript Canvas API",
        "body": "I remember learning about motion and collisions in my high school physics class. It was a challenging topic, but I was more intrigued by how accurate the science can be. As a developer, I wondered what it would take to build a program that simulates the mathematical principles applied in this branch of physics. I’ll show you how I built a collision simulator with JavaScript.",
        "link": "https://medium.com/@simphiwenkabinde.dev/building-a-collision-simulator-with-javascript-f7e4e22fcd3c"
    },
    {
        "title": "The 4 CSS Combinators and How to Use Them",
        "subtitle": "Learn how to use CSS combinators to style your HTML Document",
        "body": "The CSS structure allows us to target and style elements using selectors. These selectors could be classes, ids, attributes, or tag names. But what if we wanted to target elements in relation to other elements, such as a child element, a sibling element, or even more specifically, a sibling element that follows directly after a specific type of element — yes, we might want to be that specific.",
        "link": "https://medium.com/@simphiwenkabinde.dev/the-4-css-combinators-and-how-to-use-them-b841ed35b5f3"
    }
]